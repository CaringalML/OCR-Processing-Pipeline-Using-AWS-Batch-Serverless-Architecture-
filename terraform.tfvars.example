# ========================================
# OCR Processor Configuration Example
# ========================================
# Copy this file to terraform.tfvars and customize the values below

# Basic Configuration
aws_region   = "ap-southeast-2"
project_name = "my-ocr-processor"
environment  = "dev"

# ========================================
# RATE LIMITING CONFIGURATION
# ========================================

# Enable or disable rate limiting
enable_rate_limiting = true

# Stage-level throttling (affects all methods as fallback)
api_throttling_rate_limit  = 1000  # requests per second
api_throttling_burst_limit = 2000  # burst capacity

# ========================================
# PUBLIC PLAN (No API Key Required)
# ========================================
# Conservative limits for anonymous users to prevent abuse
# while allowing legitimate testing and light usage

public_rate_limit  = 10    # 10 requests per second
public_burst_limit = 20    # 20 request burst
public_quota_limit = 1000  # 1,000 requests per day

# ========================================
# REGISTERED PLAN (API Key Required)
# ========================================
# Moderate limits for registered users
# Good for small businesses and developers

registered_rate_limit  = 50     # 50 requests per second
registered_burst_limit = 100    # 100 request burst
registered_quota_limit = 10000  # 10,000 requests per day

# ========================================
# PREMIUM PLAN (API Key Required)
# ========================================
# High limits for premium users
# Suitable for enterprise usage

premium_rate_limit  = 200     # 200 requests per second
premium_burst_limit = 400     # 400 request burst
premium_quota_limit = 100000  # 100,000 requests per day

# ========================================
# METHOD-SPECIFIC LIMITS
# ========================================
# Override limits for specific endpoints
# Set to 0 to use stage defaults

# Upload endpoint (more restrictive due to processing cost)
upload_method_rate_limit  = 5   # 5 uploads per second
upload_method_burst_limit = 10  # 10 upload burst

# Processed endpoint (more permissive for reading results)
processed_method_rate_limit  = 20  # 20 reads per second
processed_method_burst_limit = 40  # 40 read burst

# ========================================
# API KEY MANAGEMENT
# ========================================

# Create demo API keys for testing
create_default_api_keys = true

# Names for demo API keys (will be prefixed with project-environment)
api_key_names = [
  "demo-registered-user",
  "demo-premium-user"
]

# ========================================
# OTHER CONFIGURATION OPTIONS
# ========================================

# VPC Configuration
vpc_cidr               = "10.0.0.0/16"
public_subnet_cidrs    = ["10.0.1.0/24", "10.0.2.0/24"]
private_subnet_cidrs   = ["10.0.10.0/24", "10.0.20.0/24"]

# Auto-cleanup settings
cleanup_age_hours             = 24
cleanup_schedule_expression   = "rate(6 hours)"
enable_auto_cleanup          = true

# VPC Endpoints (cost optimization)
enable_ssm_endpoints = false  # Set to true for debugging, adds $21.60/month

# File processing limits
max_file_size_mb = 100

# CloudFront settings
cloudfront_price_class = "PriceClass_100"  # Cost-optimized

# DynamoDB settings
dynamodb_billing_mode = "PAY_PER_REQUEST"  # Cost-optimized

# Anthropic API Key for Claude OCR
# Get your API key from: https://console.anthropic.com/
anthropic_api_key = "sk-ant-api03-YOUR_API_KEY_HERE"

# Common tags for all resources
common_tags = {
  Project     = "ocr-processor"
  Environment = "dev"
  ManagedBy   = "terraform"
  Purpose     = "document-processing"
  Owner       = "your-team"
  CostCenter  = "engineering"
}